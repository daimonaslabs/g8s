---
apiVersion: v1
kind: Namespace
metadata:
  name: g8s
  labels:
    pod-security.kubernetes.io/enforce: restricted
    g8s-master: "true"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: g8s
  namespace: g8s
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name:  g8s
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: g8s
  namespace: g8s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: g8s-controller
  namespace: g8s
  labels:
    app: g8s-controller
spec:
  selector:
    matchLabels:
      app: g8s-controller
  template:
    metadata:
      labels:
        app: g8s-controller
    spec:
      serviceAccountName: g8s
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/controlplane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/etcd"
          operator: "Exists"
          effect: "NoExecute"
      containers:
        - name: controller
          image: ghcr.io/daimonaslabs/g8s-runtime:v0.1.0-alpha.2
          args: ["--role", "controller"]
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65532
            runAsGroup: 65532
            allowPrivilegeEscalation: false
            seccompProfile: 
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
---
# this is for the webhook
apiVersion: api.g8s.io/v1alpha1
kind: SelfSignedTLSBundle
metadata:
  name: g8s-webhook
  namespace: g8s
spec:
  appName: g8s-webhook
  sans:
    - "g8s-webhook"
    - "g8s-webhook.g8s"
    - "g8s-webhook.g8s.svc"
    - "g8s-webhook.g8s.svc.cluster.local"